for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        indexbot = i
    end
end

status = setting.webhook.botstatus
webhook = setting.webhook.storageinfo.link
message = setting.webhook.storageinfo.id
tilebreak = {}
infoid = {}
strings = ""
local tileBlock = 0
local tileSeed = 0
local tilePack = 0
index = 1
local identity = {}
local tileY = 0
identity.block = 1
identity.seed = 1
identity.pack = 1
identity.drop = 1
identity.goodtime = os.time()
identity.indexBot = 1
identity.indexBackup = 1
seedX = setting.storage.seed.drop.x - 1
seedY = setting.storage.seed.drop.y - 1
packX = setting.storage.pack.drop.x - 1
packY = setting.storage.pack.drop.y - 1
barisX = setting.storage.pnb.baris.x - 1
barisY = setting.storage.pnb.baris.y - 1
blockX = setting.storage.block.drop.x - 1
blockY = setting.storage.block.drop.y - 1

identity.splitt = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

if tileY == 0 then
    if setting.mode.pnbmode == "up" then
        tileY = -2
    elseif setting.mode.pnbmode == "down" then
        tileY = 2
    end
end

identity.punchitem = function(x,y)
    for _,tilepunch in pairs(tilebreak) do
        if getTile(x + tilepunch,y + tileY).fg ~= 0 or getTile(x + tilepunch,y + tileY).bg ~= 0 then
            return true
        end
    end
    return false
end

for x = math.floor(setting.mode.pnbtile/2),1,-1 do
    x = x * -1
    table.insert(tilebreak,x)
end

for x = 0, math.ceil(setting.mode.pnbtile/2) - 1 do
    table.insert(tilebreak,x)
end

identity.placeitem = function(x,y)
    for _,tileplace in pairs(tilebreak) do
        if getTile(x + tileplace,y + tileY).fg == 0 and getTile(x+tileplace,y + tileY).bg == 0 then
            return true
        end
    end
    return false
end

identity.recycles = function()
    for i, trash in ipairs(setting.mode.trashList) do
        if findItem(trash) > setting.mode.amount then
			sendPacket("action|trash\n|itemID|" .. trash,2)
			sleep(2000)
			sendPacket("action|dialog_return\ndialog_name|trash_item\nitemID|" .. trash .. "|\ncount|" .. findItem(trash),2)
			sleep(2000)
        end
    end
end

identity.itemFloat = function(id)
	count = 0
	for _, obj in pairs(getObjects()) do
		if obj.id == id then
			count = count + obj.count
		end
	end
	return count
end

identity.botstatus = function()
    strings = ""
    for _, bot in pairs(getBots()) do
        strings = strings.."\n"..""..(string.sub(bot.name,1,3)).." | "..(string.upper(bot.status)).."" 
    end
    return strings
end

identity.blockstorage = function()
    strings = ""
	for i = 1, #setting.storage.block.world do
		strings = strings.."\n||"..(string.upper(setting.storage.block.world[i])).."|| "..(infoid[setting.storage.block.world[i]] or "?")..""
    end
    return strings
end

identity.seedstorage = function()
    strings = ""
	for i = 1, #setting.storage.seed.world do
		strings = strings.."\n||"..(string.upper(setting.storage.seed.world[i])).."|| "..(infoid[setting.storage.seed.world[i]] or "?")..""
    end
    return strings
end

identity.packstorage = function()
    strings = ""
	for i = 1, #setting.storage.pack.world do
		strings = strings.."\n||"..(string.upper(setting.storage.pack.world[i])).."|| "..(infoid[setting.storage.pack.world[i]] or "?")..""
    end
    return strings
end

identity.genworld = function(threads)
    local withnum = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    local generate = ""
    for i = 1,11 do
        local randomnumber = math.random(1,#withnum)
        local acaknomor = string.sub(withnum,randomnumber,randomnumber)
        generate = generate..acaknomor
    end
    return generate
end
local find = identity.genworld(threads)

identity.botgems = function()
    local count = 0
    for _,bot in pairs(getBots()) do
        count = count + bot.gems
    end
    return count
end

identity.botinfo = function(content)
	if setting.webhook.access then
		text = [[
			$webHookUrl = "]]..status..[["
			$payload = @{
				content = "]]..content..[["
			}
			[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
			Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
		]]
		local file = io.popen("powershell -command -", "w")
		file:write(text)
		file:close()
	end
end

identity.goodtimes = function(estimates)
    local seconds = tonumber(estimates)
    if seconds <= 0 then
        return "00:00:00";
    else
        hours = string.format("%02.f", math.floor(estimates/3600));
        minutes = string.format("%02.f", math.floor(estimates/60 - (hours*60)));
        seconds = string.format("%02.f", math.floor(estimates - hours*3600 - minutes *60));
        return ""..hours.." : "..minutes.." : "..seconds
    end
end

identity.webhookinfo = function()
	if setting.webhook.access then
        local text = [[
            $webHookUrl = "]]..webhook..[[/messages/]]..message..[["
            $payload = @{
                username = "BizzantiuM's"
                embeds = @(
                    @{
                        title = "AUTO PNB v1.0 [ ]]..string.upper(setting.type)..[[ ]"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = "BOT INFO"
                                value = "]].."**RUNNING : [ "..identity.goodtimes(os.difftime(os.time(),identity.goodtime)).." ]\nTOTAL GEMS : "..identity.botgems().."**\n"..identity.botstatus()..""..[["
                                inline = "false"
                            }
                            @{
                                name = "STORAGE STATIC"
                                value = "]]..""..[["
                                inline = "false"
                            }
                            @{
                                name = "BLOCK"
                                value = "]]..identity.blockstorage()..[["
                                inline = "true"
                            }
                            @{
                                name = "SEED"
                                value = "]]..identity.seedstorage()..[["
                                inline = "true"
                            }
                            @{
                                name = "PACK"
                                value = "]]..identity.packstorage()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Hydrotrium] Developed by BizzantiuM's`nLast updated : ]]..(os.date"%d/%m/%y":upper().." at ")..os.date("%I")..":"..os.date("%M").." "..os.date("%p"):upper()..[["
                        }
                    }
                )
            }
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

identity.reconnect = function(world,id,x,y)
    if getBot().world ~= world:upper() and getBot().status == "online" then 
        identity.botinfo("[ ||"..getBot().name.."|| ] at another world ??, trying to joining world again @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] at another world ??, trying to joining world again")
        sleep(250)
        local count = 0
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            if getBot().world ~= world:upper() then 
                count = count + 1
                if count > 5 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to joining world again, terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if id ~= "" then
            local stucks = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(setting.delay.warp)
                if stucks > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] success to joining world @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] success to joining world")
        sleep(250)
    end
    if getBot().status ~= "online" then
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] status is "..getBot().status.."")
        sleep(250)
        while getBot().status ~= "online" do
            connect()
            sleep(setting.delay.reconnect)
            if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "maintenance" then
                identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status..", removing bot @everyone")
                sleep(250)
                print("[ "..getBot().name.." ] status is "..getBot().status..", removing bot")
                sleep(250)
                if setting.mode.removeBot then
                    removeBot(getBot().name)
                    sleep(2000)
                    error()
                end
            end
        end
        local counts = 0
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            if getBot().world ~= world:upper() then 
                counts = counts + 1
                if counts > 5 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to joining world again, terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if id ~= "" then
            local stuckk = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(setting.delay.warp)
                if stuckk > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    sleep(250)
                    error()
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        sleep(250)
        print("[ "..getBot().name.." ] status is "..getBot().status.."")
        sleep(250)
    end
    if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 then
        identity.botinfo("[ ||"..getBot().name.."|| ] Stuck at white door ! @everyone")
        sleep(250)
        local stuck = 0
        if id ~= "" then
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
                sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
                sleep(setting.delay.warp)
                if stuck > 3 then
                    identity.botinfo("[ ||"..getBot().name.."|| ] Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    sleep(250)
                end
            end
        end
        if x and y then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] Already back to pos ! @everyone")
        sleep(250)
    end
end

identity.warp = function(world,door)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if getBot().world ~= string.upper(world) then
        addHook("onvariant","nuked",function (varlist)
            if varlist[0] == "OnConsoleMessage" then
                if string.find(varlist[1],"inaccessible.") then
                    nuked = true
                end
                if string.find(varlist[1], "experiencing high load,") then
                    subserver = true
                end
                if string.find(varlist[1], "people in it.") then
                    people = true
                end
                if string.find(varlist[1], "Players lower than level") then
                    level = true
                end
            end
        end)
        local join = 0
        while getBot().world ~= string.upper(world) and not nuked and not subserver and not people and not level do
            sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            join = join + 1
            if join == 5 then
                server = true
            end
        end
        removeHooks()
        sleep(2000)
    end
    if getBot().world == string.upper(world) then
        if door ~= "" then
            local stuck = 0
            while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 and not wrong do
                sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
                sleep(setting.delay.warp)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
    end
end

identity.takepickaxe = function()
    ::BACK::
    world = identity.splitt(setting.storage.takepickaxe.world[index],"[^:]+")[1]
    door = identity.splitt(setting.storage.takepickaxe.world[index],"[^:]+")[2]
    setJob("Take pickaxe")
    sleep(250)
    identity.warp(world,door)
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            if findItem(98) == 0 then
                                for _, obj in pairs(getObjects()) do
                                    if obj.id == 98 then
                                        findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                                        sleep(1000)
                                        collect(2)
                                        sleep(1000)
                                        identity.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                                    end
                                    if findItem(98) > 0  then
                                        wear(98)
                                        sleep(500)
                                        move(-1,0)
                                        sleep(1000)
                                        drop(98,findItem(98) - 1)
                                        sleep(1000)
                                        break
                                    end
                                end
                            end
                        else
                            wrong = false
                            sleep(5000)
                            print("Id door world take support items is wrong, check ur id door !!")
                            sleep(250)
                            identity.botinfo("Id door world take support items is wrong, check ur id door !, terminated script @everyone")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        print("World take support items is nuked, check ur world !!")
                        sleep(250)
                        identity.botinfo("World take support items is nuked, check ur world !, terminated script @everyone")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto BACK
                end
            else
                level = false
                sleep(5000)
                print("World : "..world.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..world.." has full people, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto BACK
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
        sleep(120000)
        goto BACK
    end
end

identity.buying = function(threads)
    setJob("Buying packs")
    sleep(250)
    if findItem(112) >= setting.pack.mingems then
        if setting.mode.upbackpack then
            while getBot().slots < 36 do
                sendPacket("action|buy\nitem|upgrade_backpack",2)
                sleep(4000)
            end
        end
        while findItem(112) > setting.pack.price do
            sendPacket("action|buy\nitem|"..setting.pack.debug,2)
            sleep(4000)
            if findItem(setting.pack.packList[1]) >= 200 then
                break
            end
        end
    end
end

identity.storingpacks = function(threads)
    for i = identity.pack , #setting.storage.pack.world do
        ::Here::
        setJob("Dropping packs")
        sleep(250)
        world = setting.storage.pack.world[i]
        door = setting.storage.pack.door
        identity.warp(world,door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                if identity.itemFloat(setting.pack.packList[1]) >= setting.storage.pack.limit then
                                    infoid[world] = "["..identity.itemFloat(setting.pack.packList[1]).."] LIMIT !!!"
                                    identity.botinfo("Packs storage : [ ||"..world.."|| ] has reached limit, skipped world @everyone")
                                    sleep(250)
                                    print("Packs storage : [ "..world.." ] has reached limit, skipped world")
                                    sleep(250)
                                    identity.pack = identity.pack + 1
                                    if identity.pack > #setting.storage.pack.world then
                                        infoid[world] = "["..identity.itemFloat(setting.pack.packList[1]).."] LIMIT !!!"
                                        identity.botinfo("All packs storage has reached limit, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                        sleep(250)
                                        print("All packs storage has reached limit, Removing bot : [ "..getBot().name.." ]")
                                        sleep(250)
                                        identity.warp(find,"")   
                                        sleep(250)
                                        if setting.mode.removeBot then
                                            removeBot(getBot().name)
                                            sleep(2000)
                                        end
                                        error()
                                    end
                                    tilePack = 0
                                else
                                    for y,pack in pairs(setting.pack.packList) do
                                        for i,tile in pairs(getTiles()) do
                                            if setting.pack.separated then
                                                if tile.fg == 0 or tile.bg == 0 then
                                                    ::BACK::
                                                    findPath(packX + (tilePack),packY - (y-1))
                                                    sleep(1000)
                                                    local count = 0
                                                    identity.reconnect(world,door,packX + (tilePack),packY - (y-1))
                                                    if packX + (tilePack) >= 98 then
                                                        packY = packY - 1
                                                        tilePack = 0
                                                    end
                                                    while findItem(pack) > 0 do
                                                        drop(pack)
                                                        sleep(setting.delay.drop)
                                                        identity.reconnect(world,door,packX + (tilePack),packY - (y-1))
                                                        count = count + 1
                                                        if count >= 2 then
                                                            tilePack = tilePack + 1
                                                            goto BACK
                                                        end
                                                    end
                                                end
                                                if findItem(pack) == 0 then
                                                    break
                                                end
                                            else
                                                if tile.fg == 0 or tile.bg == 0 then
                                                    ::BACK::
                                                    findPath(packX + (tilePack),packY)
                                                    sleep(1000)
                                                    local count = 0
                                                    identity.reconnect(world,door,packX + (tilePack),packY)
                                                    if packX + (tilePack) >= 98 then
                                                        packY = packY - 1
                                                        tilePack = 0
                                                    end
                                                    while findItem(pack) > 0 do
                                                        drop(pack)
                                                        sleep(setting.delay.drop)
                                                        identity.reconnect(world,door,packX + (tilePack),packY)
                                                        count = count + 1
                                                        if count >= 2 then
                                                            tilePack = tilePack + 1
                                                            goto BACK
                                                        end
                                                    end
                                                end
                                                if findItem(pack) == 0 then
                                                    break
                                                end
                                            end
                                        end
                                    end
                                    sleep(100)
                                    break
                                end
                            else
                                infoid[world] = "WRONG DOOR !!!"
                                wrong = false
                                sleep(5000)
                                print("[ "..world.." ] Id door packs storage is wrong, check ur id door!")
                                sleep(250)
                                identity.botinfo("[ ||"..world.."|| ] Id door packs storage is wrong, check ur id door! @everyone")
                                sleep(250)
                                identity.pack = identity.pack + 1
                                if identity.pack > #setting.storage.pack.world then
                                    print("All packs storage has reached limit")
                                    sleep(250)
                                    identity.botinfo("All packs storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    sleep(250)
                                    if setting.mode.removeBot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                                tilePack = 0
                            end
                        else
                            infoid[world] = "NUKED !!!"
                            nuked = false
                            sleep(5000)
                            print("[ "..world.." ] packs Storage is NUKED, check ur storage!")
                            sleep(250)
                            identity.botinfo("[ "..world.." ] packs Storage is NUKED, check ur storage! @everyone")
                            sleep(250)
                            identity.pack = identity.pack + 1
                            if identity.pack > #setting.storage.pack.world then
                                print("All packs storage has reached limit!")
                                sleep(250)
                                identity.botinfo("All packs storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                sleep(250)
                                if setting.mode.removeBot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                            tilePack = 0
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
    infoid[world] = "["..identity.itemFloat(setting.pack.packList[1]).."]"
end

identity.storingseeds = function(threads)
    for i = identity.seed, #setting.storage.seed.world do
        ::Here::
        setJob("Dropping seeds")
        sleep(250)
        world = setting.storage.seed.world[i]
        door = setting.storage.seed.door
        identity.warp(world,door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                if identity.itemFloat(setting.item.seed) >= setting.storage.seed.limit then
                                    infoid[world] = "["..identity.itemFloat(setting.item.seed).."] LIMIT !!!"
                                    identity.botinfo("Seeds storage : [ ||"..world.."|| ] has reached limit, skipped world @everyone")
                                    sleep(250)
                                    print("Seeds storage : [ "..world.." ] has reached limit, skipped world")
                                    sleep(250)
                                    identity.seed = identity.seed + 1
                                    if identity.seed > #setting.storage.seed.world then
                                        infoid[world] = "["..identity.itemFloat(setting.item.seed).."] LIMIT !!!"
                                        identity.botinfo("All seeds storage has reached limit, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                        sleep(250)
                                        print("All seeds storage has reached limit, Removing bot : [ "..getBot().name.." ] @everyone")
                                        sleep(250)
                                        identity.warp(find,"")   
                                        sleep(250)
                                        if setting.mode.removeBot then
                                            removeBot(getBot().name)
                                            sleep(2000)
                                        end
                                        error()
                                    end
                                    tileSeed = 0
                                else
                                    for i,tile in pairs(getTiles()) do
                                        if tile.fg == 0 or tile.bg == 0 then
                                            ::BACK::
                                            findPath(seedX + (tileSeed),seedY)
                                            sleep(1000)
                                            local count = 0
                                            identity.reconnect(world,door,seedX + (tileSeed),seedY)
                                            if seedX + (tileSeed) >= 98 then
                                                seedY = seedY - 1
                                                tileSeed = 0
                                            end
                                            while findItem(setting.item.seed) > 0 do
                                                drop(setting.item.seed)
                                                sleep(setting.delay.drop)
                                                identity.reconnect(world,door,seedX + (tileSeed),seedY)
                                                count = count + 1
                                                if count >= 2 then
                                                    tileSeed = tileSeed + 1
                                                    goto BACK
                                                end
                                            end
                                        end
                                        if findItem(setting.item.seed) == 0 then
                                            break
                                        end
                                    end
                                    sleep(100)
                                    break
                                end
                            else
                                infoid[world] = "WRONG DOOR !!!"
                                wrong = false
                                sleep(5000)
                                print("[ "..world.." ] Id door seeds storage is wrong, check ur id door!")
                                sleep(250)
                                identity.botinfo("[ ||"..world.."|| ] Id door seeds storage is wrong, check ur id door! @everyone")
                                sleep(250)
                                identity.seed = identity.seed + 1
                                if identity.seed > #setting.storage.seed.world then
                                    print("All seeds storage has reached limit")
                                    sleep(250)
                                    identity.botinfo("All seeds storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    sleep(250)
                                    if setting.mode.removeBot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                                tileSeed = 0
                            end
                        else
                            infoid[world] = "NUKED !!!"
                            nuked = false
                            sleep(5000)
                            print("[ "..world.." ] seeds Storage is NUKED, check ur storage!")
                            sleep(250)
                            identity.botinfo("[ "..world.." ] seeds Storage is NUKED, check ur storage! @everyone")
                            sleep(250)
                            identity.seed = identity.seed + 1
                            if identity.seed > #setting.storage.seed.world then
                                print("All seeds storage has reached limit!")
                                sleep(250)
                                identity.botinfo("All seeds storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                sleep(250)
                                if setting.mode.removeBot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                            tileSeed = 0
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
    infoid[world] = "["..identity.itemFloat(setting.item.seed).."]"
end

identity.take = function(threads)
    for i = identity.block , #setting.storage.block.world do
        ::Here::
        setJob("Take blocks")
        sleep(250)
		world = setting.storage.block.world[i]
        door = setting.storage.block.door
        identity.warp(world,door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                if identity.itemFloat(setting.item.block) == 0 then
                                    infoid[world] = ""..identity.itemFloat(setting.item.block).." EMPTY !!"
                                    identity.botinfo("Take blocks storage : [ ||"..world.."|| ] has empty, skipped world @everyone")
                                    sleep(250)
                                    print("Take blocks storage : [ "..world.." ] has empty, skipped world")
                                    sleep(250)
                                    identity.block = identity.block + 1
                                    if identity.block > #setting.storage.block.world then
                                        infoid[world] = ""..identity.itemFloat(setting.item.block).." EMPTY !!"
                                        identity.botinfo("All take blocks storage has empty, Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                        sleep(250)
                                        print("All take blocks storage has empty, Removing bot : [ "..getBot().name.." ]")
                                        sleep(250)
                                        identity.webhookinfo("All take blocks storage has empty, Removing bot!")
                                        sleep(250)
                                        identity.storingseeds(threads)
                                        sleep(250)
                                        identity.warp(find,"")   
                                        sleep(250)
                                        if setting.mode.removeBot then
                                            removeBot(getBot().name)
                                            sleep(2000)
                                        end
                                        setJob("Blocks empty")
                                        sleep(250)
                                        error()
                                    end
                                else
                                    for _, object in pairs(getObjects()) do
                                        if object.id == setting.item.block then
                                            findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                            sleep(1000)
                                            collect(2,112)
                                            sleep(1000)
                                            identity.reconnect(world,door,math.floor((object.x)/32), math.floor((object.y)/32))
                                        end
                                        if findItem(setting.item.block) >= setting.mode.pnbtile then
                                            break
                                        end
                                    end
                                    sleep(100)
                                    break
                                end
                            else
                                infoid[world] = "WRONG DOOR !!!"
                                wrong = false
                                sleep(5000)
                                print("[ "..world.." ] Id door Take blocks storage is wrong, check ur id door!")
                                sleep(250)
                                identity.botinfo("[ ||"..world.."|| ] Id door Take blocks storage is wrong, check ur id door! @everyone")
                                sleep(250)
                                identity.block = identity.block + 1
                                if identity.block > #setting.storage.block.world then
                                    print("All Take blocks storage has reached limit")
                                    sleep(250)
                                    identity.botinfo("All Take blocks storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    sleep(250)
                                    if setting.mode.removeBot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                            end
                        else
                            infoid[world] = "NUKED !!!"
                            nuked = false
                            sleep(5000)
                            print("[ "..world.." ] take blocks Storage is NUKED, check ur storage!")
                            sleep(250)
                            identity.botinfo("[ "..world.." ] take blocks Storage is NUKED, check ur storage! @everyone")
                            sleep(250)
                            identity.block = identity.block + 1
                            if identity.block > #setting.storage.block.world then
                                print("All take blocks storage has reached limit!")
                                sleep(250)
                                identity.botinfo("All take blocks storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                sleep(250)
                                if setting.mode.removeBot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
    infoid[world] = "["..identity.itemFloat(setting.item.block).."]"
    identity.recycles(threads)
    sleep(250)
    identity.line(threads)
    sleep(250)
end

identity.storingblocks = function(threads)
    for i = identity.drop , #setting.storage.block.world do
        ::Here::
        world = setting.storage.block.world[i]
        door = setting.storage.block.door
        setJob("Dropping Blocks")
        sleep(250)
        identity.warp(world,door)
        sleep(250)
        identity.webhookinfo()
        sleep(250)
        if not server then
            if not people then
                if not level then
                    if not subserver then
                        if not nuked then
                            if not wrong then
                                for i,tile in pairs(getTiles()) do
                                    if tile.fg == 0 or tile.bg == 0 then
                                        ::BACK::
                                        findPath(blockX + (tileBlock),blockY)
                                        sleep(1000)
                                        local count = 0
                                        identity.reconnect(world,door,blockX + (tileBlock),blockY)
                                        if blockX + (tileBlock) >= 98 then
                                            blockY = blockY - 1
                                            tileBlock = 0
                                        end
                                        while findItem(setting.item.block) > 0 do
                                            drop(setting.item.block)
                                            sleep(setting.delay.drop)
                                            identity.reconnect(world,door,blockX + (tileBlock),blockY)
                                            count = count + 1
                                            if count >= 2 then
                                                tileBlock = tileBlock + 1
                                                goto BACK
                                            end
                                        end
                                    end
                                    if findItem(setting.item.block) == 0 then
                                        break
                                    end
                                end
                                sleep(100)
                                break
                            else
                                infoid[world] = "WRONG DOOR !!!"
                                wrong = false
                                sleep(5000)
                                print("[ "..world.." ] Id door blocks storage is wrong, check ur id door!")
                                sleep(250)
                                identity.botinfo("[ ||"..world.."|| ] Id door blocks storage is wrong, check ur id door! @everyone")
                                sleep(250)
                                identity.drop = identity.drop + 1
                                if identity.drop > #setting.storage.block.world then
                                    print("All blocks storage has reached limit")
                                    sleep(250)
                                    identity.botinfo("All blocks storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                    sleep(250)
                                    if setting.mode.removeBot then
                                        removeBot(getBot().name)
                                        sleep(2000)
                                    end
                                    error()
                                end
                                tileBlock = 0
                            end
                        else
                            infoid[world] = "NUKED !!!"
                            nuked = false
                            sleep(5000)
                            print("[ "..world.." ] blocks Storage is NUKED, check ur storage!")
                            sleep(250)
                            identity.botinfo("[ "..world.." ] blocks Storage is NUKED, check ur storage! @everyone")
                            sleep(250)
                            identity.drop = identity.drop + 1
                            if identity.drop > #setting.storage.block.world then
                                print("All blocks storage has reached limit!")
                                sleep(250)
                                identity.botinfo("All blocks storage has reached limit! Removing bot : [ ||"..getBot().name.."|| ] @everyone")
                                sleep(250)
                                if setting.mode.removeBot then
                                    removeBot(getBot().name)
                                    sleep(2000)
                                end
                                error()
                            end
                            tileBlock = 0
                        end
                    else
                        subserver = false
                        sleep(5000)
                        print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                        sleep(250)
                        identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                        sleep(120000)
                        goto Here
                    end
                else
                    level = false
                    sleep(5000)
                    print("World : "..world.." has level limit, change ur level world limit")
                    sleep(250)
                    identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                    sleep(250)
                    error()
                end
            else
                people = false
                sleep(5000)
                print("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(250)
                identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
                sleep(120000)
                goto Here
            end
        else
            server = false
            sleep(5000)
            print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
            sleep(120000)
            goto Here
        end
    end
    infoid[world] = "["..identity.itemFloat(setting.item.block).."]"
end

identity.line = function()
    identity.param = 0
    ::Check::
    if findItem(98) == 0 and account.takepickaxe.access and getBot().status == "online" then
        identity.takepickaxe(threads)
        sleep(250)
        goto Check
    end
    setJob("Set up Line")
    sleep(250)
    ::Here::
    world = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[1]
    door = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[2]
    identity.warp(world,door)
    sleep(250)
    identity.webhookinfo()
    sleep(250)
    if not server then
        if not people then
            if not level then
                if not subserver then
                    if not nuked then
                        if not wrong then
                            if identity.itemFloat(112) >= setting.storage.pnb.limitgems then
                                if findItem(setting.item.block) > 0 then
                                    identity.storingblocks(threads)
                                    sleep(250)
                                end
                                if findItem(setting.item.seed) > 0 then
                                    identity.storingseeds(threads)
                                    sleep(250)
                                end
                                identity.warp(find,"")
                                sleep(250)
                                if setting.mode.removeBot then
                                    identity.botinfo("Gems at world pnb has reached limit")
                                    sleep(250)
                                    print("Gems at world pnb has reached limit")
                                    sleep(250)
                                    removeBot(getBot().name)
                                    sleep(2000)
                                else
                                    identity.botinfo("Gems at world pnb has reached limit")
                                    sleep(250)
                                    print("Gems at world pnb has reached limit")
                                    sleep(250)
                                end
                                setJob("Gems limit")
                                sleep(250)
                                error()
                            else
                                if setting.type == "nogaut" then
                                    if setting.mode.pnbtile == 1 then
                                        identity.botline = setting.mode.pnbtile + 3
                                        for _,tile in pairs(getTiles()) do
                                            for strs,bot in pairs(getBots()) do
                                                if bot.name == getBot().name then
                                                    findPath(barisX - identity.param,barisY)
                                                    sleep(1000)
                                                    identity.reconnect(world,door,barisX,barisY)
                                                    break
                                                else
                                                    identity.param = identity.param + identity.botline
                                                end
                                            end
                                            break
                                        end
                                    else
                                        identity.botline = setting.mode.pnbtile + 1
                                        for _,tile in pairs(getTiles()) do
                                            for strs,bot in pairs(getBots()) do
                                                if bot.name == getBot().name then
                                                    findPath(barisX - identity.param,barisY)
                                                    sleep(1000)
                                                    identity.reconnect(world,door,barisX,barisY)
                                                    break
                                                else
                                                    identity.param = identity.param + identity.botline
                                                end
                                            end
                                            break
                                        end
                                    end
                                elseif setting.type == "gaut" then
                                    identity.botline = setting.mode.pnbtile
                                    for _,tile in pairs(getTiles()) do
                                        for strs,bot in pairs(getBots()) do
                                            if bot.name == getBot().name then
                                                findPath(barisX - identity.param,barisY)
                                                sleep(1000)
                                                identity.reconnect(world,door,barisX,barisY)
                                                break
                                            else
                                                identity.param = identity.param + identity.botline
                                            end
                                        end
                                        break
                                    end
                                end
                            end
                        else
                            wrong = false
                            sleep(5000)
                            identity.botinfo("World pnb : [ ||"..world.."|| ] is Wrong door, terminated script @everyone")
                            sleep(250)
                            print("World pnb : [ "..world.." ] is Wrong door, terminated script")
                            sleep(250)
                            error()
                        end
                    else
                        nuked = false
                        sleep(5000)
                        identity.botinfo("World pnb : [ ||"..world.."|| ] is NUKED @everyone")
                        sleep(250)
                        print("World pnb : [ "..world.." ] is NUKED, terminated script")
                        sleep(250)
                        error()
                    end
                else
                    subserver = false
                    sleep(5000)
                    print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                    sleep(250)
                    identity.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                    sleep(120000)
                    goto Here
                end
            else
                level = false
                sleep(5000)
                print("World : "..world.." has level limit, change ur level world limit")
                sleep(250)
                identity.botinfo("World : "..world.." has level limit, change ur level world limit !, terminated script @everyone")
                sleep(250)
                error()
            end
        else
            people = false
            sleep(5000)
            print("World : "..world.." has full people, sleeping for 2 minutes")
            sleep(250)
            identity.botinfo("World : "..world.." has full people, sleeping for 2 minutes")
            sleep(120000)
            goto Here
        end
    else
        server = false
        sleep(5000)
        print("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes")
        sleep(250)
        identity.botinfo("Bot : "..getBot().name.." idiot server, sleeping for 2 minutes@everyone")
        sleep(120000)
        goto Here
    end
    identity.pnb()
    sleep(250)
    if setting.type == "nogaut" then
        if setting.mode.storeseedafterpnb then
            identity.storingseeds()
            sleep(250)
            identity.take()
            sleep(250)
        else
            identity.take()
            sleep(250)
        end
    elseif setting.type == "gaut" then
        for _, obj in pairs(getObjects()) do
            if obj.id == setting.item.seed then
                findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                sleep(1000)
                collect(2,112)
                sleep(1000)
                identity.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
            end
        end
        if findItem(setting.item.seed) > 0 then
            identity.storingseeds()
            sleep(250)
            identity.take()
            sleep(250)
        else
            identity.take()
            sleep(250)
        end
    end
end

identity.pnb = function()
    setJob("PNB")
    sleep(250)
    collectSet(false)
    sleep(250)
    botX = math.floor(getBot().x / 32)
    botY = math.floor(getBot().y / 32)
    world = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[1]
    door = identity.splitt(setting.storage.pnb.world[index],"[^:]+")[2]
    if setting.mode.pnbtile == 1 then
        while findItem(setting.item.block) >= setting.mode.pnbtile do
            if getTile(botX,botY + tileY).bg ~= 0 or getTile(botX, botY + tileY).fg ~= 0 then
                punch(0,tileY)
                sleep(setting.delay.punch)
                identity.reconnect(world,door,botX,botY)
            end
            if getTile(botX,botY + tileY).bg == 0 or getTile(botX, botY + tileY).fg == 0 then
                place(setting.item.block,0,tileY)
                sleep(setting.delay.place)
                identity.reconnect(world,door,botX,botY)
            end
            if setting.type == "nogaut" then
                collect(2)
                sleep(30)
            end
            if findItem(setting.item.seed) >= 150 then
                identity.storingseeds()
                sleep(250)
                identity.line()
                sleep(250)
            elseif findItem(112) >= setting.pack.mingems and setting.pack.buypack then
                identity.buying()
                sleep(250)
                identity.storingpacks()
                sleep(250)
                identity.line()
                sleep(250)
            end
        end
    else
        while findItem(setting.item.block) >= setting.mode.pnbtile do
            while identity.placeitem(botX,botY) do
                for _,i in pairs(tilebreak) do
                    if getTile(botX + i,botY + tileY).fg == 0 and getTile(botX + i,botY + tileY).bg == 0 then
                        place(setting.item.block,i,tileY)
                        sleep(setting.delay.place)
                        identity.reconnect(world,door,botX,botY)
                    end
                end
            end
            while identity.punchitem(botX,botY) do
                for _,i in pairs(tilebreak) do
                    if getTile(botX + i,botY + tileY).fg ~= 0 or getTile(botX + i,botY + tileY).bg ~= 0 then
                        punch(i,tileY)
                        sleep(setting.delay.punch)
                        identity.reconnect(world,door,botX,botY)
                    end
                end
            end
            if setting.type == "nogaut" then
                collect(3)
                sleep(30)
            end
            if findItem(setting.item.seed) >= 150 then
                identity.storingseeds()
                sleep(250)
                identity.line()
                sleep(250)
            elseif findItem(112) >= setting.pack.mingems and setting.pack.buypack then
                identity.buying()
                sleep(250)
                identity.storingpacks()
                sleep(250)
                identity.line()
                sleep(250)
            end
        end
    end
end

if BizzantiuM.version == "1.0" and BizzantiuM.handler == "akbarsht" then
    sleep(math.random(500,5000))
    if findItem(98) == 0 and account.takepickaxe.access and getBot().status == "online" then
        identity.takepickaxe()
        sleep(250)
    end
    if findItem(setting.item.block) >= setting.mode.pnbtile then
        identity.line()
        sleep(250)
    else
        identity.take()
        sleep(250)
    end
else
    print("This script made by BizzantuM's server, buy at another server = RESELLER !!")
    sleep(250)
end
