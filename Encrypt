local identity = {}
local tileRetrieve = 0
local tileRetrieves = 0
identity.gaiax = 0
identity.gaiay = 0
identity.utx = 0
identity.uty = 0
index = 1

identity.botinfo = function(content)
	if setting.webhook.access then
		text = [[
			$webHookUrl = "]]..setting.webhook.status..[["
			$payload = @{
				content = "]]..content..[["
			}
			[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
			Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
		]]
		local file = io.popen("powershell -command -", "w")
		file:write(text)
		file:close()
	end
end

identity.splitt = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

identity.round = function(n)
    return n % 1 > 0.5 and math.ceil(n) or math.floor(n)
end

identity.itemFloat = function(id)
	count = 0
	for _, obj in pairs(getObjects()) do
		if obj.id == id then
			count = count + obj.count
		end
	end
	return count
end

identity.reconnect = function(world,id,x,y)
    if getBot().world ~= world:upper() then 
        identity.botinfo("[ ||"..getBot().name.."|| ] at another world ??, trying to joining world again @everyone")
        print("[ "..getBot().name.." ] bot at another world ??, trying to joining world again")
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
        end
        while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
            sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
            sleep(setting.delay.warp)
            if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg ~= 6 then
                while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                    findPath(x,y)
                    sleep(150)
                end
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] success to joining world @everyone")
        print("[ "..getBot().name.." ] success to joining world")
    end
    if getBot().status ~= "online" then
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        print("[ "..getBot().name.." ] status is "..getBot().status.."")
        while getBot().status ~= "online" do
            connect()
            sleep(setting.delay.reconnect)
            if getBot().status == "suspended" or getBot().status == "banned" or getBot().status == "ercon" then
                identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status..", removing bot @everyone")
                print("[ "..getBot().name.." ] status is "..getBot().status..", removing bot")
                if setting.removeBot then
                    removeBot(getBot().name)
                    sleep(2000)
                end
                error()
            end
        end
        while getBot().world ~= world:upper() do
            sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
        end
        while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
            sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
            sleep(setting.delay.warp)
            if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg ~= 6 then
                while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                    findPath(x,y)
                    sleep(150)
                end
            end
        end
        identity.botinfo("[ ||"..getBot().name.."|| ] status is "..getBot().status.." @everyone")
        print("[ "..getBot().name.." ] status is "..getBot().status.."")
    end
    while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 do
        sendPacket("action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0", 3)
        sleep(setting.delay.warp)
        if getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg ~= 6 then
            while math.floor(getBot().x / 32) ~= x or math.floor(getBot().y / 32) ~= y do
                findPath(x,y)
                sleep(150)
            end
        end
    end
end

identity.warp = function(world,door)
    name = world
    identity.door = door
    if identity.door then
        name = name .. "|" ..identity.door
    end
    if getBot().world ~= string.upper(world) then
        addHook("onvariant","nuked",function (varlist)
            if varlist[0] == "OnConsoleMessage" then
                if string.find(varlist[1],"inaccessible.") then
                    nuked = true
                end
            end
        end)
        while getBot().world ~= string.upper(world) and not nuked do
            sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
        end
        removeHooks()
        sleep(1000)
    end
    if identity.door and getBot().world == string.upper(world) then
        local stuck = 0
        while getTile(math.floor(getBot().x / 32),math.floor(getBot().y / 32)).fg == 6 and not wrong do
            sendPacket("action|join_request\nname|"..name.."\ninvitedWorld|0",3)
            sleep(setting.delay.warp)
            stuck = stuck + 1
            if stuck == 5 then
                wrong = true
            end
        end
    end
end

function hook(varlist)
	if varlist[0] == "OnDialogRequest" and varlist[1]:find("add_label_with_icon|big|`wUnstable Tesseract``|left|6948|") then
		if varlist[1]:find("The machine is currently empty!") then 
            sleep(500)
		else
			amount = varlist[1]:match("The machine contains (%d+)")
			amounts = 1
			if tonumber(amount) >= 200 then 
				amounts = 200 
			end
			if tonumber(amount) < 200 then 
				amounts = tonumber(amount) 
			end
            local utpkt = string.format([[action|dialog_return
            dialog_name|itemsucker_block
            tilex|%d|
            tiley|%d|
            buttonClicked|retrieveitem
            chk_enablesucking|1
            ]], varlist[1]:match("tilex|(%d+)"), varlist[1]:match("tiley|(%d+)"))
            sleep(500)
            sendPacket(utpkt,2)
            sleep(500)
            local utpkt = string.format([[action|dialog_return
            dialog_name|itemremovedfromsucker
            tilex|%d|
            tiley|%d|
            itemtoremove|%d]], varlist[1]:match("tilex|(%d+)") , varlist[1]:match("tiley|(%d+)") , amounts)
            sleep(500)
            sendPacket(utpkt,2)
            sleep(500)
        end
    end
	if varlist[0] == "OnDialogRequest" and varlist[1]:find("add_label_with_icon|big|`wGaia's Beacon``|left|6946|") then
		if varlist[1]:find("The machine is currently empty!") then 
            sleep(500)
		else
			ammount = varlist[1]:match("The machine contains (%d+)")
			ammounts = 1
			if tonumber(ammount) >= 200 then 
				ammounts = 200 
			end
			if tonumber(ammount) < 200 then 
				ammounts = tonumber(ammount) 
			end
            local gaiapkt = string.format([[action|dialog_return
            dialog_name|itemsucker_seed
            tilex|%d|
            tiley|%d|
            buttonClicked|retrieveitem
            chk_enablesucking|1
            ]], varlist[1]:match("tilex|(%d+)") , varlist[1]:match("tiley|(%d+)"))
            sleep(500)
            sendPacket(gaiapkt,2)
            sleep(500)
            local gaiapkt = string.format([[action|dialog_return
            dialog_name|itemremovedfromsucker
            tilex|%d|
            tiley|%d|
            itemtoremove|%d]], varlist[1]:match("tilex|(%d+)") , varlist[1]:match("tiley|(%d+)") , ammounts)
            sleep(500)
            sendPacket(gaiapkt,2)
            sleep(500)
        end
	end
end

addHook("onvariant","retrieve",hook)

identity.setposition = function()
    world = identity.splitt(setting.retrieve[index], "[^:]+")[1]
    identity.door = identity.splitt(setting.retrieve[index], "[^:]+")[2]
    setJob("Retrieve")
    identity.warp(world,identity.door)
    if string.upper(getBot().name) == string.upper(setting.growid.ut) then
        for i , tile in pairs(getTiles()) do
            if tile.fg == 6948 then
                findPath(tile.x,tile.y-1)
                sleep(1000)
                identity.utx = math.floor(getBot().x / 32)
                identity.uty = math.floor(getBot().y / 32)
                sleep(1000)
            end
        end
    elseif string.upper(getBot().name) == string.upper(setting.growid.gaia) then
        for i, tile in pairs(getTiles()) do
            if tile.fg == 6946 then
                findPath(tile.x,tile.y-1)
                sleep(1000)
                identity.gaiax = math.floor(getBot().x / 32)
                identity.gaiay = math.floor(getBot().y / 32)
                sleep(1000)
            end
        end
    end
end

identity.storingitems = function()
    world = identity.splitt(setting.retrieve[index], "[^:]+")[1]
    identity.door = identity.splitt(setting.retrieve[index], "[^:]+")[2]
    if string.upper(getBot().name) == string.upper(setting.growid.gaia) then
        for i, tile in pairs(getTiles()) do
            if tile.fg == 6946 then
                ::BACK::
                findPath(tile.x+(tileRetrieve),tile.y - 1)
                sleep(1000)
                local count = 0
                identity.reconnect(world,identity.door,tile.x+(tileRetrieve),tile.y - 1)
                if tile.x + (tileRetrieve) >= 98 then
                    tile.y = tile.y - 1
                    tileRetrieve = 0
                end
                while findItem(setting.item.seed) > 0 do
                    drop(setting.item.seed)
                    sleep(setting.delay.drop)
                    count = count + 1
                    if count >= 3 then
                        tileRetrieve = tileRetrieve + 1
                        goto BACK
                    end
                end
            end
        end
    elseif string.upper(getBot().name) == string.upper(setting.growid.ut) then
        for i, tile in pairs(getTiles()) do
            if tile.fg == 6948 then
                ::BACKS::
                findPath(tile.x+(tileRetrieves),tile.y - 1)
                sleep(1000)
                local count = 0
                identity.reconnect(world,identity.door,tile.x+(tileRetrieves),tile.y - 1)
                if tile.x + (tileRetrieves) >= 98 then
                    tile.y = tile.y - 1
                    tileRetrieves = 0
                end
                while findItem(setting.item.block) > 0 do
                    drop(setting.item.block)
                    sleep(setting.delay.drop)
                    count = count + 1
                    if count >= 3 then
                        tileRetrieves = tileRetrieves + 1
                        goto BACKS
                    end
                end
            end
        end
    end
end

if BizzantiuM.version == "1.1" and BizzantiuM.handler == "akbarsht" then
    identity.setposition()
    while true do
        if string.upper(getBot().name) == string.upper(setting.growid.ut) then
            findPath(identity.utx,identity.uty)
            sleep(setting.delay.retrieve)
            wrench(0,1)
            sleep(setting.delay.retrieve*2)
            identity.storingitems()
            identity.reconnect(world,identity.door,identity.utx,identity.uty)
        elseif string.upper(getBot().name) == string.upper(setting.growid.gaia) then
            findPath(identity.gaiax,identity.gaiay)
            sleep(setting.delay.retrieve)
            wrench(0,1)
            sleep(setting.delay.retrieve*2)
            identity.storingitems()
            identity.reconnect(world,identity.door,identity.gaiax,identity.gaiay)
        end
    end
end
    
